name: Push Controller

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - 'package-lock.json'
  workflow_dispatch:

jobs:
  dispatch-push:
    name: Dispatch Push
    runs-on: ubuntu-latest
    env:
      workflow_dispatch: ${{ contains(github.event_name, 'workflow_dispatch') }}
    steps:
    - id: changes
      name: Get changed files
      uses: trilom/file-changes-action@v1.2.4
      with:
        output: ','
    - name: 'Analyze changes'
      # regex lookahead and lookbehind, \w don't work here
      run: |
        [[ "${{ steps.changes.outputs.files }}" =~ server/[a-zA-Z/].+\.js ]] && echo "backend=true" >> $GITHUB_ENV;
        [[  "$(echo "${{ steps.changes.outputs.files }}" | sed "s/public\/code//")" =~ src/|config\.js|eslintrc|\.env|public/ ]] && echo "frontend=true" >> $GITHUB_ENV;
        [[ "${{ steps.changes.outputs.files }}" =~ public/code ]] && echo "code_examples=true" >> $GITHUB_ENV;
        [[ "${{ steps.changes.outputs.files }}" =~ package\.json ]] && echo "package_json=true" >> $GITHUB_ENV;
        [[ "${{ steps.changes.outputs.files }}" =~ \.github/|actions/ ]] && echo "github_actions=true" >> $GITHUB_ENV;
        exit 0;
    - name: 'Prepare env variable'
        # env variables are available only in next steps
      run: |
        [[ $workflow_dispatch == true ]] || [[ $github_actions ]] || [[ $package_json ]] || { [[ $backend ]] && [[ $frontend ]]; } && echo "all=true" >> $GITHUB_ENV;
        [[ $code_examples && "${{ startsWith(github.event.head_commit.message, '[Code submission]' }} == "true"]] && echo "code_submission" >> $GITHUB_ENV;
        exit 0;
    - name: DEBUG
      run: |
        echo "backend=$backend";
        echo "frontend=$frontend";
        echo "code_examples=$code_examples";
        echo "package_json=$package_json";
        echo "github_actions=$github_actions";
        echo "all=$all";
        echo "code_submission=$code_submission";

    - name: Clone repository
      run: |
        git clone --depth 1 --no-single-branch https://${{ secrets.GH_PERSONAL_TOKEN }}@github.com/encap/coderush.git .

    - name: Setup Node.js
      if: env.all || env.frontend || env.code_submission
      uses: actions/setup-node@v1
      with:
        node-version: '12'
    - uses: actions/cache@v2
      if: env.all || env.frontend
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
    - name: Run npm install
      if: env.all || env.frontend
      run: |
        npm install

    - name: Vue build
      if: env.all || env.frontend
      run: |
        npm run build:prod
    - name: Copy submitted code
      if: env.code_examples && !env.frontend
      run: |
        mkdir -p dist
        cp -r public/code dist/code

    - name: Stage all changes
      run: |
        git add .
    - name: Check for changes
      continue-on-error: true
      run: |
        ! git diff-index --quiet HEAD -- && echo "changes=true" >> $GITHUB_ENV;
        exit 0;
    - name: DEBUG
      run: |
        echo "changes=$changes";

    - name: Setup - gcloud / gsutil
      if: env.all || env.frontend || env.code_examples
      uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        service_account_key: ${{ secrets.GCS_SA_KEY }}
        project_id: ${{ secrets.GCS_PROJECT_ID }}
        export_default_credentials: true

    - name: Upload frontend without code examples
      if: env.all || env.frontend
      run: |
        gsutil -m -h "Cache-Control:no-store" rsync -r -d -x "dist/code.*$" dist gs://$GCS_BUCKET 
    - name: Upload code examples
      if: env.code_examples
      run: |
        gsutil -m -h "Cache-Control:no-store" rsync -r -d dist/code gs://$GCS_BUCKET/code

    - name: Set headers
      if: env.frontend || env.all
      run: |
        gsutil -m setmeta -h "Content-Encoding:gzip" gs://${GCS_BUCKET}/*/*
        gsutil -m setmeta -h "Content-Encoding:gzip" gs://${GCS_BUCKET}/cm/**/*

    - name: Hot update index.html
      if: env.frontend && !env.backend' && !env.all
      run: |
        curl -d "@/dist/index.html" -X POST ${{ secrets.INDEX_HTML_UPDATE_URL }}

    - name: Install @actions/core
      if: env.code_submission
      run: |
        npm install --no-package-lock --no-save @actions/core @actions/github faunadb
    - name: Accept code submission
      if: env.code_submission
      run: |
        node actions/add-code-submission-to-db.js

    - name: Push backend to Heroku
      if: env.backend || env.all
      uses: akhileshns/heroku-deploy@v3.6.8
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
        heroku_email: ${{ secrets.HEROKU_EMAIL }}
